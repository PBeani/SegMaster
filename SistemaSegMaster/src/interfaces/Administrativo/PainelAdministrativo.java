/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.Administrativo;

import bancoDeDados.BancoException;
import interfaces.Administrativo.Consultas.*;
import javax.swing.JPanel;
import bancoDeDados.jdbc.*;
import beans.CategoriaCertificado;
import beans.Cidade;
import beans.Cliente;
import beans.Estado;
import beans.FormaPagamento;
import beans.Hardware;
import beans.Hierarquia;
import beans.Municipio;
import beans.StatusComissao;
import beans.TipoCertificado;
import beans.TipoCliente;
import beans.TipoContato;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import regrasDeNegocio.*;

/**
 *
 * @author pedro
 */
public class PainelAdministrativo extends javax.swing.JPanel {

    /**
     * Creates new form ConsultaEstados
     */
    public PainelAdministrativo() {
        initComponents();
    }

    public JPanel getPanelUser() {
        return this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        nav_adm_estado = new javax.swing.JLabel();
        nav_adm_cidades = new javax.swing.JLabel();
        nav_admin_categoria = new javax.swing.JLabel();
        nav_adm_tipo_certificado = new javax.swing.JLabel();
        nav_adm_cliente = new javax.swing.JLabel();
        nav_adm_contato = new javax.swing.JLabel();
        nav_adm_comissao = new javax.swing.JLabel();
        nav_adm_pagamento = new javax.swing.JLabel();
        nav_adm_hardware = new javax.swing.JLabel();
        nav_adm_hierarquia = new javax.swing.JLabel();
        painelConsultas = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(900, 560));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Módulo Administrativo");

        jSeparator1.setForeground(new java.awt.Color(255, 153, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        jSeparator1.setPreferredSize(new java.awt.Dimension(0, 1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        nav_adm_estado.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_estado.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_estado.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_estado.setText("  Estados");
        nav_adm_estado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_estado.setOpaque(true);
        nav_adm_estado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_estadoMouseClicked(evt);
            }
        });

        nav_adm_cidades.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_cidades.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_cidades.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_cidades.setText("  Municipios");
        nav_adm_cidades.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_cidades.setOpaque(true);
        nav_adm_cidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_cidadesMouseClicked(evt);
            }
        });

        nav_admin_categoria.setBackground(new java.awt.Color(255, 153, 0));
        nav_admin_categoria.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_admin_categoria.setForeground(new java.awt.Color(255, 255, 255));
        nav_admin_categoria.setText("  Categoria de Certificado");
        nav_admin_categoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_admin_categoria.setOpaque(true);
        nav_admin_categoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_admin_categoriaMouseClicked(evt);
            }
        });

        nav_adm_tipo_certificado.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_tipo_certificado.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_tipo_certificado.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_tipo_certificado.setText("  Tipo de Certificado");
        nav_adm_tipo_certificado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_tipo_certificado.setOpaque(true);
        nav_adm_tipo_certificado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_tipo_certificadoMouseClicked(evt);
            }
        });

        nav_adm_cliente.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_cliente.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_cliente.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_cliente.setText("  Tipo de Cliente");
        nav_adm_cliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_cliente.setOpaque(true);
        nav_adm_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_clienteMouseClicked(evt);
            }
        });

        nav_adm_contato.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_contato.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_contato.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_contato.setText("  Tipo de Contato");
        nav_adm_contato.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_contato.setOpaque(true);
        nav_adm_contato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_contatoMouseClicked(evt);
            }
        });

        nav_adm_comissao.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_comissao.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_comissao.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_comissao.setText("  Status de Comissão");
        nav_adm_comissao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_comissao.setOpaque(true);
        nav_adm_comissao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_comissaoMouseClicked(evt);
            }
        });

        nav_adm_pagamento.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_pagamento.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_pagamento.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_pagamento.setText("  Forma de Pagamento");
        nav_adm_pagamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_pagamento.setOpaque(true);
        nav_adm_pagamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_pagamentoMouseClicked(evt);
            }
        });

        nav_adm_hardware.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_hardware.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_hardware.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_hardware.setText("  Hardware");
        nav_adm_hardware.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_hardware.setOpaque(true);
        nav_adm_hardware.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_hardwareMouseClicked(evt);
            }
        });

        nav_adm_hierarquia.setBackground(new java.awt.Color(255, 153, 0));
        nav_adm_hierarquia.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        nav_adm_hierarquia.setForeground(new java.awt.Color(255, 255, 255));
        nav_adm_hierarquia.setText("  Hirearquia de Certificado");
        nav_adm_hierarquia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nav_adm_hierarquia.setOpaque(true);
        nav_adm_hierarquia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nav_adm_hierarquiaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nav_adm_estado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_cidades, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_admin_categoria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_tipo_certificado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_contato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_comissao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_pagamento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nav_adm_hardware, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(nav_adm_hierarquia, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nav_adm_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_cidades, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_admin_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_tipo_certificado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_contato, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_comissao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_pagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_hardware, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nav_adm_hierarquia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelConsultas.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout painelConsultasLayout = new javax.swing.GroupLayout(painelConsultas);
        painelConsultas.setLayout(painelConsultasLayout);
        painelConsultasLayout.setHorizontalGroup(
            painelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );
        painelConsultasLayout.setVerticalGroup(
            painelConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(painelConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nav_adm_estadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_estadoMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaEstados panelAdm = new ConsultaEstados(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);

        try {
            EstadoRegrasNegocio estado = new EstadoRegrasNegocio();
            LinkedList<Estado> listaEstado = estado.listaEstado();
            panelAdm.montaTabelaEstado(listaEstado);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }

        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_estadoMouseClicked

    private void nav_admin_categoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_admin_categoriaMouseClicked

        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaCategoriaCertificado panelAdm = new ConsultaCategoriaCertificado(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            Categoria_certificadoRegrasNegocio categoria = new Categoria_certificadoRegrasNegocio();
            LinkedList<CategoriaCertificado> listaCategoria = categoria.listaCategoriaCertificado();
            panelAdm.montaTabelaCertificado(listaCategoria);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "erro ao acessar banco");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }

        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);

    }//GEN-LAST:event_nav_admin_categoriaMouseClicked

    private void nav_adm_tipo_certificadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_tipo_certificadoMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaTipoCertificado panelAdm = new ConsultaTipoCertificado(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            TipoCertificadoRegrasNegocio certificado = new TipoCertificadoRegrasNegocio();
            LinkedList<TipoCertificado> listaCertificado = certificado.listaTipoCertificado();
            panelAdm.montaTabelaTipoCertificado(listaCertificado);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_tipo_certificadoMouseClicked

    private void nav_adm_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_clienteMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaTipoCliente panelAdm = new ConsultaTipoCliente(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            TipoClienteRegrasNegocio tipoCliente = new TipoClienteRegrasNegocio();
            LinkedList<TipoCliente> listaTipoCliente = tipoCliente.listaTipoCliente();
            panelAdm.montaTabelaTipoCliente(listaTipoCliente);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_clienteMouseClicked

    private void nav_adm_contatoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_contatoMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaTipoContato panelAdm = new ConsultaTipoContato(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            TipoContatoRegrasNegocio tipoContato = new TipoContatoRegrasNegocio();
            LinkedList<TipoContato> listaTipoCertificado = tipoContato.listaTipoContato();
            panelAdm.montaTabelaTipoContato(listaTipoCertificado);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_contatoMouseClicked

    private void nav_adm_comissaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_comissaoMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaStatusComissao panelAdm = new ConsultaStatusComissao(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            StatusRegrasNegocio status = new StatusRegrasNegocio();
            LinkedList<StatusComissao> listaStatus = status.listaStatusComissao();
            panelAdm.montaTabelaStatusComissao(listaStatus);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_comissaoMouseClicked

    private void nav_adm_pagamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_pagamentoMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaFormaPagamento panelAdm = new ConsultaFormaPagamento(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            Forma_pagamentoRegrasNegocio formaPagamente = new Forma_pagamentoRegrasNegocio();
            LinkedList<FormaPagamento> listaFormaPagamento = formaPagamente.listaFormaPagamento();
            panelAdm.montaTabelaFormaPagamento(listaFormaPagamento);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_pagamentoMouseClicked

    private void nav_adm_hardwareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_hardwareMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaHardware panelAdm = new ConsultaHardware(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            HardwareRegrasNegocio hardware = new HardwareRegrasNegocio();
            LinkedList<Hardware> listaHardware = hardware.listaHardware();
            panelAdm.montaTabelaHardware(listaHardware);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_hardwareMouseClicked

    private void nav_adm_hierarquiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_hierarquiaMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaHierarquia panelAdm = new ConsultaHierarquia(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            HierarquiaRegrasNegocio hierarquia = new HierarquiaRegrasNegocio();
            LinkedList<Hierarquia> listaHierarquia = hierarquia.listaHierarquia();
            panelAdm.montaTabelaHierarquia(listaHierarquia);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_hierarquiaMouseClicked

    private void nav_adm_cidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nav_adm_cidadesMouseClicked
        if (lastPanel != null) {
            lastPanel.setVisible(false);
            painelConsultas.revalidate();
        } else {
            painelConsultas.revalidate();
        }
        ConsultaMunicipio panelAdm = new ConsultaMunicipio(this);
        JPanel content = panelAdm;
        content.setBounds(0, 0, painelConsultas.getSize().width, painelConsultas.getSize().height);
        content.setVisible(true);
        try {
            MunicipioRegrasNegocio municipio = new MunicipioRegrasNegocio();
            LinkedList<Municipio> listaMunicipio = municipio.listaMunicipio();
            panelAdm.montaTabelaMunicipio(listaMunicipio);
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, "problema no banco de dados");
        } catch (Exception ex) {
            Logger.getLogger(PainelAdministrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        painelConsultas.add(content);
        this.add(painelConsultas);
        setLastPanel(content);
    }//GEN-LAST:event_nav_adm_cidadesMouseClicked

    private JPanel lastPanel;

    public JPanel getLastPanel() {
        return lastPanel;
    }

    public void setLastPanel(JPanel last) {
        lastPanel = last;
    }

    public JPanel getPainelConsulta() {
        return painelConsultas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nav_adm_cidades;
    private javax.swing.JLabel nav_adm_cliente;
    private javax.swing.JLabel nav_adm_comissao;
    private javax.swing.JLabel nav_adm_contato;
    private javax.swing.JLabel nav_adm_estado;
    private javax.swing.JLabel nav_adm_hardware;
    private javax.swing.JLabel nav_adm_hierarquia;
    private javax.swing.JLabel nav_adm_pagamento;
    private javax.swing.JLabel nav_adm_tipo_certificado;
    private javax.swing.JLabel nav_admin_categoria;
    private javax.swing.JPanel painelConsultas;
    // End of variables declaration//GEN-END:variables

}
